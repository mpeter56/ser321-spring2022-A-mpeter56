// This service can calculate the area and parimater of what ever shapes are implemented
// Handle error cases when needed.
// Allows client to add new shapes with equations to the list
// listShapes will list all implemented shapes with directions on what arguments are needed for that shape
// area will calculate the area of the given shape
// parimeter will calculate the parimeter of the given shape

syntax = "proto3";

option java_multiple_files = true;
option java_package = "service";
option java_outer_classname = "CalcshapeProto";

package services;
import "services/story.proto";  // this is in here to allow to re-use the "Empty" type 

service Calcshape {
  rpc area (CalcshapeAreaRequest) returns (CalcshapeResponse) {}
  rpc parameter (CalcshapeParameterRequest) returns (CalcshapeResponse) {}
  rpc listShapes (CalcshapeListRequest) returns (CalcshapeListResponse) {}
  rpc addShape(CalcshapeAddShapeRequest) returns (CalcshapeAddShapeResponse) {}
}

// Request to add a new shape to the calculations list
// requires shape to have name, directions, areaEquation, parameterEquation
message CalcshapeAddShapeRequest{
  Shape shape = 1;
}

// response to tell if addShape was successfull
message CalcshapeAddShapeResponse{
  bool isSuccess = 1;
  string error = 2;
}

// Request list of all shapes available for calculation
message CalcshapeListRequest{
  Empty empty = 1;
}

// List all shapes available for calculation
message CalcshapeListResponse {
  repeated Shape shapes = 1;
}

// The response message
message CalcshapeResponse {
  bool isSuccess = 1;
  double solution = 2;
  string error = 3; // Error message, a String saying what went wrong
}

// The Area Request message
// requires shape to have name, width, height(sometimes ignored)
message CalcshapeAreaRequest {
  Shape shape = 1;
}

// The Parameter Request message
// requires shape to have name, width, height(sometimes ignored)
message CalcshapeParameterRequest {
  Shape shape = 1;
}

// The shape object
message Shape {
  string name = 1; // name of the shape
  double height = 2; // height of the shape
  double width = 3; // width of the shape
  string directions = 4; // directions on what arguments are needed for the shape.
  string areaEquation = 5; // equation for calculating area of shape(use lowercase 'width' and 'height')
  string parameterEquation = 6; //equation for calculating parameter of shape(use lowercase 'width' and 'height')
}
